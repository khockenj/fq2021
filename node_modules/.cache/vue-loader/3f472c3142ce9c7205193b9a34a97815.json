{"remainingRequest":"C:\\Users\\Kevin's Desktop\\Documents\\FQ2021\\fq2021\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Kevin's Desktop\\Documents\\FQ2021\\fq2021\\src\\components\\ScrimPlayer.vue?vue&type=style&index=0&id=5fe8e5c7&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Kevin's Desktop\\Documents\\FQ2021\\fq2021\\src\\components\\ScrimPlayer.vue","mtime":1635353504754},{"path":"C:\\Users\\Kevin's Desktop\\Documents\\FQ2021\\fq2021\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Kevin's Desktop\\Documents\\FQ2021\\fq2021\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Kevin's Desktop\\Documents\\FQ2021\\fq2021\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Kevin's Desktop\\Documents\\FQ2021\\fq2021\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Kevin's Desktop\\Documents\\FQ2021\\fq2021\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQojcHJvZmlsZSB7DQogIG1heC13aWR0aDo1MCU7DQogIHRleHQtYWxpZ246Y2VudGVyOw0KICBtYXJnaW46YXV0bzsNCn0NCi5jZW50ZXIgew0KICB0ZXh0LWFsaWduOmNlbnRlcjsNCiAgdmVydGljYWwtYWxpZ246Y2VudGVyOw0KICBiYWNrZ3JvdW5kLWNvbG9yOiNEREREREQ7DQogIGJvcmRlci1yYWRpdXM6MjVweDsNCiAgbWFyZ2luOjVweDsNCn0NCi5jZW50ZXItaGFsZiB7DQogIHRleHQtYWxpZ246Y2VudGVyOw0KICB2ZXJ0aWNhbC1hbGlnbjpjZW50ZXI7DQogIGJhY2tncm91bmQtY29sb3I6I0NDQzsNCiAgYm9yZGVyLXJhZGl1czoyNXB4Ow0KfQ0KLmNlbnRlci1ub2JnIHsNCiAgdGV4dC1hbGlnbjpjZW50ZXI7DQogIHZlcnRpY2FsLWFsaWduOmNlbnRlcjsNCn0NCg=="},{"version":3,"sources":["ScrimPlayer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ScrimPlayer.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n      <div>\r\n      <v-container class='profile'>\r\n        <v-row>        <v-col cols='3'><v-btn to='/scrims' elevation='2' color='#02894b' dark><v-icon\r\n        left\r\n        dark\r\n        tile\r\n      >\r\n        mdi-arrow-left\r\n      </v-icon>Return</v-btn></v-col>\r\n        <v-col cols='6' class='text-h3 center' style='margin:1rem'>{{game}}</v-col>\r\n        </v-row>\r\n        <v-row><v-col cols='3'></v-col>\r\n        <v-col cols='6' class='center-nobg'>\r\n              <v-dialog\r\n      v-model=\"dialog\"\r\n      width=\"500\"\r\n    >\r\n      <template v-slot:activator=\"{ on, attrs }\">\r\n        <v-btn\r\n          color=\"red lighten-2\"\r\n          dark\r\n          v-bind=\"attrs\"\r\n          v-on=\"on\"\r\n        >\r\n          Custom Metric Calculations\r\n        </v-btn>\r\n      </template>\r\n\r\n      <v-card>\r\n        <v-card-title class=\"text-h5 grey lighten-2\">\r\n          Custom Metric\r\n        </v-card-title>\r\n\r\n        <v-card-text>\r\n          I took the average XP, CS, and Gold at 10 and 15min for each role (generated from the scrim games - small sample) and divided the player's stats by the average to give a number that would be above or below 1 and then summing them while also adding Kills, .5 Assists, subtracting deaths. <br />\r\n          By Role: (CS/CSAvg) + (XP/XPAvg) + (Gold/GoldAVG) + Kills + (1/2)Assists - Deaths <br />\r\n          For Support, I replaced CS with Vision Score for VS/VSAvg, as support cs can vary based on starting item<br/>\r\n          Support: (VS/VSAvg) + (XP/XPAvg) + (Gold/GoldAVG) + Kills + (1/2)Assists - Deaths <br />\r\n          I do think that I'm sort of double counting gold here with kills and gold both accounting for points - I'd probably revise in time.\r\n        </v-card-text>\r\n\r\n        <v-divider></v-divider>\r\n\r\n        <v-card-actions>\r\n          <v-spacer></v-spacer>\r\n          <v-btn\r\n            color=\"success\"\r\n            text\r\n            @click=\"dialog = false\"\r\n          >\r\n            Cool!\r\n          </v-btn>\r\n        </v-card-actions>\r\n      </v-card>\r\n    </v-dialog>\r\n        </v-col>\r\n        </v-row>\r\n        <v-row><v-col cols='3'></v-col>\r\n        <v-col cols='6' class='text-h4 center-nobg' style='margin:1rem'>Stats at 10 Minutes</v-col>\r\n        </v-row>\r\n  <v-data-table\r\n    :headers=\"headers\"\r\n    :items=\"stats10\"\r\n    :items-per-page=\"10\"\r\n    class=\"elevation-1\"\r\n    dense\r\n    multi-sort\r\n  >\r\n    <template v-slot:item.dmgpergold=\"{ item }\">\r\n            {{item.dmgpergold.toFixed(2)}}\r\n    </template>\r\n    <template v-slot:item.minionsKilled=\"{ item }\">\r\n            {{item.minionsKilled.toFixed(0)}}\r\n    </template>\r\n    <template v-slot:item.visionScore=\"{ item }\">\r\n            {{item.visionScore.toFixed(2)}}\r\n    </template>\r\n        <template v-slot:item.totalDamageDealtToTurrets=\"{ item }\">\r\n            {{item.totalDamageDealtToTurrets.toFixed(0)}}\r\n    </template>\r\n        <template v-slot:item.totalDamageDealtChampions=\"{ item }\">\r\n            {{item.totalDamageDealtChampions.toFixed(0)}}\r\n    </template>\r\n            <template v-slot:item.iota=\"{ item }\">\r\n            {{item.iota.toFixed(2)}}\r\n    </template>\r\n      <template v-slot:item.csd=\"{ item }\">\r\n            {{item.csd.toFixed(0)}}\r\n    </template>\r\n  </v-data-table>\r\n        <v-row><v-col cols='3'></v-col>\r\n        <v-col cols='6' class='text-h4 center-nobg' style='margin:1rem'>Stats at 15 Minutes</v-col>\r\n        </v-row>\r\n  <v-data-table\r\n    :headers=\"headers\"\r\n    :items=\"stats15\"\r\n    :items-per-page=\"10\"\r\n    class=\"elevation-1\"\r\n    dense\r\n    multi-sort\r\n  >\r\n    <template v-slot:item.dmgpergold=\"{ item }\">\r\n            {{item.dmgpergold.toFixed(2)}}\r\n    </template>\r\n    <template v-slot:item.minionsKilled=\"{ item }\">\r\n            {{item.minionsKilled.toFixed(0)}}\r\n    </template>\r\n    <template v-slot:item.visionScore=\"{ item }\">\r\n            {{item.visionScore.toFixed(2)}}\r\n    </template>\r\n        <template v-slot:item.totalDamageDealtToTurrets=\"{ item }\">\r\n            {{item.totalDamageDealtToTurrets.toFixed(0)}}\r\n    </template>\r\n        <template v-slot:item.totalDamageDealtChampions=\"{ item }\">\r\n            {{item.totalDamageDealtChampions.toFixed(0)}}\r\n    </template>\r\n        <template v-slot:item.iota=\"{ item }\">\r\n            {{item.iota.toFixed(2)}}\r\n    </template>\r\n          <template v-slot:item.csd=\"{ item }\">\r\n            {{item.csd.toFixed(0)}}\r\n    </template>\r\n  </v-data-table>\r\n      </v-container>\r\n      </div>\r\n</template>\r\n\r\n<script>\r\nimport players from '../task3_dumps.json'\r\nexport default {\r\n  name: 'ScrimProfile',\r\n  components: {},\r\n        data: () => ({\r\n          dialog: false,\r\n          player: null,\r\n          game: null,\r\n          stats10: [],\r\n          stats15: [],\r\n           headers: [\r\n          /*{\r\n            text: 'Team',\r\n            align: 'start',\r\n            sortable: true,\r\n            value: 'team',\r\n          },\r\n          */\r\n          { text: 'Role', value: 'role', sortable:true },\r\n          { text: 'Name', value: 'name', sortable:true },\r\n          { text: 'Champion', value: 'champion', sortable:true },\r\n          { text: 'CSD', value: 'csd', sortable:true },\r\n          { text: 'GD', value: 'gd', sortable:true },\r\n          { text: 'XPD', value: 'xpd' },\r\n          { text: 'Custom Metric', value: 'iota' },\r\n          { text: 'DMG Per Gold', value: 'dmgpergold' },\r\n          { text: 'Kills', value: 'championsKilled' },\r\n          { text: 'Assists', value: 'assists' },\r\n          { text: 'Deaths', value: 'numDeaths' },\r\n          { text: 'CS', value: 'minionsKilled' },\r\n          { text: 'Damage to Turrets', value: 'totalDamageDealtToTurrets' },\r\n          { text: 'Damage', value: 'totalDamageDealtChampions' },\r\n          { text: 'Gold', value: 'totalGold' },\r\n          { text: 'XP', value: 'experience' },\r\n          { text: 'Vision Score', value: 'visionScore', sortable:true  },\r\n          { text: 'Wards Killed', value: 'wardKilled' },\r\n          { text: 'Wards Placed', value: 'wardPlaced' }\r\n        ],\r\n            \r\n          \r\n        }),\r\n        methods: {\r\n          calculateIOTA: function(stats, time) {\r\n            let gold, cs, xp = 0;\r\n            let role = stats['role'];\r\n            if(role == \"Top\") {\r\n              if(time == 15) {\r\n                gold = stats['totalGold']/5592;\r\n                cs = stats['minionsKilled']/105;\r\n                xp = stats['experience']/6735;\r\n                return [gold,cs,xp]\r\n              } else if(time == 10){\r\n                gold = stats['totalGold']/3377;\r\n                cs = stats['minionsKilled']/68;\r\n                xp = stats['experience']/4310;\r\n                return [gold,cs,xp]\r\n              }\r\n            }\r\n            else if(role == \"Jungle\") {\r\n              if(time == 15) {\r\n                gold = stats['totalGold']/5943;\r\n                cs = stats['minionsKilled']/79;\r\n                xp = stats['experience']/5906;\r\n                return [gold,cs,xp]\r\n              } else if(time == 10){\r\n                gold = stats['totalGold']/3732;\r\n                cs = stats['minionsKilled']/54;\r\n                xp = stats['experience']/3450;\r\n                return [gold,cs,xp]\r\n              }\r\n            }\r\n            else if(role == \"Mid\") {\r\n              if(time == 15) {\r\n                gold = stats['totalGold']/5967;\r\n                cs = stats['minionsKilled']/122;\r\n                xp = stats['experience']/7018;\r\n                return [gold,cs,xp]\r\n              } else if(time == 10){\r\n                gold = stats['totalGold']/3616;\r\n                cs = stats['minionsKilled']/78;\r\n                xp = stats['experience']/4396;\r\n                return [gold,cs,xp]\r\n              }\r\n            }\r\n            else if(role == \"Bottom\") {\r\n              if(time == 15) {\r\n                gold = stats['totalGold']/6049;\r\n                cs = stats['minionsKilled']/117;\r\n                xp = stats['experience']/5808;\r\n                return [gold,cs,xp]\r\n              } else if(time == 10){\r\n                gold = stats['totalGold']/3547;\r\n                cs = stats['minionsKilled']/72;\r\n                xp = stats['experience']/3370;\r\n                return [gold,cs,xp]\r\n              }\r\n            }\r\n            else if(role == \"Support\") {\r\n              if(time == 15) {\r\n                  gold = stats['totalGold']/3818;\r\n                  cs = stats['visionScore']/18;\r\n                  xp = stats['experience']/3680;\r\n                  return [gold,cs,xp]\r\n              } else if(time == 10){\r\n                  gold = stats['totalGold']/2506;\r\n                  cs = stats['visionScore']/7;\r\n                  xp = stats['experience']/2313;\r\n                  return [gold,cs,xp]\r\n              }\r\n            }\r\n          },\r\n          checkData: function() {\r\n            this.game = this.$route.params.p;\r\n            let p = this.$route.params.p;\r\n            let stats10t = [];\r\n            let stats15t = [];\r\n            //let statsFinal = [];\r\n            let vm = this;\r\n            console.log(players)\r\n            players.forEach(function(m) {\r\n                for (const [key, value] of Object.entries(m['teamOne'])) {\r\n                  if(key == p && m['gameId'] && m['gameId'] != \"2054091\" && m['gameId'] != \"2072956\") {\r\n                  value['stats10']['champion'] = value['champion']\r\n                  value['stats10']['role'] = value['role']\r\n                  value['stats10']['iota'] = vm.calculateIOTA(value['stats10'],10).reduce((partial_sum, a) => partial_sum + a,0) + value['stats10']['championsKilled'] + (value['stats10']['assists'])/2 - value['stats10']['numDeaths'];\r\n                stats10t.push(value['stats10']);\r\n                if(m['gameId']  != \"2103680\") {\r\n                  value['stats15']['champion'] = value['champion']\r\n                  value['stats15']['role'] = value['role']\r\n                  value['stats15']['iota'] = vm.calculateIOTA(value['stats15'],15).reduce((partial_sum, a) => partial_sum + a,0) + value['stats15']['championsKilled'] + (value['stats15']['assists'])/2 - value['stats15']['numDeaths'];\r\n                  stats15t.push(value['stats15']);\r\n                }\r\n\r\n                  \r\n                  }\r\n                }\r\n              \r\n\r\n              for (const [key, value] of Object.entries(m['teamTwo'])) {\r\n                  if(key == p && m['gameId'] && m['gameId'] != \"2054091\" && m['gameId'] != \"2072956\") {\r\n                  value['stats10']['champion'] = value['champion']\r\n                  value['stats10']['role'] = value['role']\r\n                  value['stats10']['iota'] = vm.calculateIOTA(value['stats10'],10).reduce((partial_sum, a) => partial_sum + a,0) + value['stats10']['championsKilled'] + (value['stats10']['assists'])/2 - value['stats10']['numDeaths'];\r\n                  stats10t.push(value['stats10']);\r\n                if(m['gameId']  != \"2103680\") {\r\n                  value['stats15']['champion'] = value['champion']\r\n                  value['stats15']['role'] = value['role']\r\n                  value['stats15']['iota'] = vm.calculateIOTA(value['stats15'],15).reduce((partial_sum, a) => partial_sum + a,0) + value['stats15']['championsKilled'] + (value['stats15']['assists'])/2 - value['stats15']['numDeaths'];\r\n                  stats15t.push(value['stats15']);\r\n                }\r\n                  \r\n                  \r\n                  }\r\n                }\r\n              \r\n            })\r\n            this.stats10 = stats10t;\r\n            this.stats15 = stats15t;\r\n            console.log(this.stats15)\r\n          },\r\n        },\r\n        mounted: function () {\r\n          this.checkData();\r\n        }\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n#profile {\r\n  max-width:50%;\r\n  text-align:center;\r\n  margin:auto;\r\n}\r\n.center {\r\n  text-align:center;\r\n  vertical-align:center;\r\n  background-color:#DDDDDD;\r\n  border-radius:25px;\r\n  margin:5px;\r\n}\r\n.center-half {\r\n  text-align:center;\r\n  vertical-align:center;\r\n  background-color:#CCC;\r\n  border-radius:25px;\r\n}\r\n.center-nobg {\r\n  text-align:center;\r\n  vertical-align:center;\r\n}\r\n</style>\r\n"]}]}